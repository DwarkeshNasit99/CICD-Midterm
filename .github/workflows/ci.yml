name: CI/CD Pipeline

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  workflow_dispatch:
    inputs:
      environment:
        description: 'Environment to deploy to'
        required: true
        default: 'dev'
        type: choice
        options:
        - dev
        - prod

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: List files in the repository
      run: ls -R

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '18.x'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Run linting
      run: npm run lint

    - name: Run tests with coverage
      run: npm test -- --coverage

    - name: Upload test coverage
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: unittests
        name: codecov-umbrella

    - name: Security audit
      run: npm audit --audit-level=moderate

  docker-build:
    needs: build-and-test
    runs-on: ubuntu-latest
    if: github.event_name == 'push' || github.event_name == 'workflow_dispatch'
    outputs:
      digest: ${{ steps.push.outputs.digest }}
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Container Registry
      uses: docker/login-action@v3
      with:
        registry: ${{ env.REGISTRY }}
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}
        tags: |
          type=sha,prefix=
          type=raw,value=latest,enable=${{ github.ref == 'refs/heads/main' }}

    - name: Build and push Docker image
      id: push
      uses: docker/build-push-action@v5
      with:
        context: .
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

  deploy:
    needs: [build-and-test, docker-build]
    runs-on: ubuntu-latest
    
    # Determine environment based on branch
    environment:
      name: ${{ github.ref == 'refs/heads/main' && 'production' || 'development' }}

    # Run only on pushes to main and develop, or on workflow_dispatch
    if: |
      (github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop')) ||
      (github.event_name == 'workflow_dispatch')

    steps:
    - name: Set environment name for workflow_dispatch
      if: github.event_name == 'workflow_dispatch'
      run: echo "ENVIRONMENT_NAME=${{ github.event.inputs.environment }}" >> $GITHUB_ENV
    
    - name: Set environment name for push
      id: set-env-push
      if: github.event_name == 'push'
      run: |
        if [ "${{ github.ref }}" = "refs/heads/main" ]; then
          echo "ENVIRONMENT_NAME=production" >> $GITHUB_ENV
        else
          echo "ENVIRONMENT_NAME=development" >> $GITHUB_ENV
        fi

    - name: Deploy to environment
      id: deploy
      run: |
        echo "ðŸš€ Deploying to ${{ env.ENVIRONMENT_NAME }} environment..."
        echo "ðŸ“¦ Docker image: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ needs.docker-build.outputs.digest }}"
        echo "âœ… Deployment to ${{ env.ENVIRONMENT_NAME }} completed successfully!"

    - name: Create deployment summary
      id: summary
      run: |
        echo "## Deployment Summary" >> $GITHUB_STEP_SUMMARY
        echo "- **Environment**: ${{ env.ENVIRONMENT_NAME }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Branch**: ${{ github.ref_name }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Commit**: ${{ github.sha }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Docker Image Digest**: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}@${{ needs.docker-build.outputs.digest }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Timestamp**: $(date)" >> $GITHUB_STEP_SUMMARY